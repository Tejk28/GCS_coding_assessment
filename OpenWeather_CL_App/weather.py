# -*- coding: utf-8 -*-
#"""weather.ipynb
#
#Automatically generated by Colab.
#
#Original file is located at
#    https://colab.research.google.com/drive/1LTokg7gCzzw7Mqi8PPtd29KEFPGOQR5c
#"""

#!/usr/bin/env python3

#!pip install colorama
import os
import requests
from colorama import Fore, Style, init
from dotenv import load_dotenv


# Initialize colorama for compatibility
init()

# Load environment variables from .env file
load_dotenv()

# Constants
#API_KEY = "45285f4451975d8eaded50e57efebd4c"                 #configured API key
API_KEY = os.getenv("OPENWEATHER_API_KEY")

if not API_KEY:
    print("‚ùå Error: OpenWeather API key is not set in environment variables.")
    exit(1)

BASE_URL = "http://api.openweathermap.org/data/2.5/weather"
FAVORITES = []

def fetch_weather_data(city_name):
    try:
        params = {"q": city_name, "appid": API_KEY, "units": "metric"}
        response = requests.get(BASE_URL, params=params)
        response.raise_for_status()
        return response.json()
    except requests.exceptions.HTTPError as http_err:
        print(f"{Fore.RED}‚ùå HTTP error occurred: {http_err}{Style.RESET_ALL}")
    except requests.exceptions.ConnectionError:
        print(f"{Fore.RED}‚ùå Connection error. Please check your internet.{Style.RESET_ALL}")
    except requests.exceptions.Timeout:
        print(f"{Fore.RED}‚ùå The request timed out. Try again later.{Style.RESET_ALL}")
    except Exception as err:
        print(f"{Fore.RED}‚ùå An error occurred: {err}{Style.RESET_ALL}")
    return None

def display_weather(data):
    if data:
        city = data.get("name")
        temp = data["main"]["temp"]
        description = data["weather"][0]["description"]
        humidity = data["main"]["humidity"]
        print(f"Weather in {city}:\n- Temperature: {temp}¬∞C\n- Humidity: {humidity}%\n- Description: {description}")
    else:
        print("No data available.")

def manage_favorites(action, city=None):
    if action == "add":
        if len(FAVORITES) < 3:
            FAVORITES.append(city)
            print(f"‚úÖ City '{city}' added to favorites.")
        else:
            print("‚ùå Favorites limit reached. Remove a city to add a new one.")
    elif action == "remove":
        if city in FAVORITES:
            FAVORITES.remove(city)
            print(f"‚úÖ City '{city}' removed from favorites.")
        else:
            print(f"‚ùå City '{city}' not found in favorites.")
    elif action == "list":
        if FAVORITES:
            print(f"{Fore.CYAN}üèôÔ∏è Favorite Cities:{Style.RESET_ALL}")
            for city in FAVORITES:
                data = fetch_weather_data(city)
                if data:
                    display_weather(data)
        else:
            print("‚ö†Ô∏è No favorite cities yet.")

def display_weather(data):
    if data:
        city = data.get("name")
        temp = data["main"]["temp"]
        description = data["weather"][0]["description"]
        humidity = data["main"]["humidity"]
        print(f"{Fore.CYAN}Weather in {city}:{Style.RESET_ALL}")
        print(f"- üå°Ô∏è Temperature: {Fore.YELLOW}{temp}¬∞C{Style.RESET_ALL}")
        print(f"- üíß Humidity: {Fore.YELLOW}{humidity}%{Style.RESET_ALL}")
        print(f"- üìù Description: {Fore.YELLOW}{description.capitalize()}{Style.RESET_ALL}")
    else:
        print(f"{Fore.RED}No data available.{Style.RESET_ALL}")


def main():
    print("Weather CLI Application\n")
    print("Commands:")
    print("1. Search weather (search)")
    print("2. Add city to favorites (add)")
    print("3. List favorite cities (list)")
    print("4. Remove city from favorites (remove)")
    print("5. Exit (exit)")

    while True:
        command = input("\nEnter a command: ").strip().lower()

        if command == "search":
            city = input("Enter city name: ").strip()
            data = fetch_weather_data(city)
            display_weather(data)
        if command == "add":
           city = input("üèôÔ∏è Enter city name to add to favorites: ").strip()
           if city in FAVORITES:
              print(f"‚ö†Ô∏è '{city}' is already in your favorites.")
           else:
              manage_favorites("add", city)
        elif command == "list":
            manage_favorites("list")
        elif command == "remove":
            city = input("Enter city name to remove from favorites: ").strip()
            manage_favorites("remove", city)
        elif command == "exit":
             print("üëã Thank you for using the Weather CLI Application. Stay safe and have a great day!")
             break

        else:
            print("Invalid command. Please try again.")

# Run the application
main()
